{"ast":null,"code":"var _jsxFileName = \"/Users/joshfeather/Documents/pathfinding-visualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const rows = 20;\n  const cols = 20;\n  const START_NODE = [9, 0];\n  const END_NODE = [10, cols - 1];\n  const createGrid = () => {\n    const grid = [];\n    for (let row = 0; row < rows; row++) {\n      const currentRow = [];\n      for (let col = 0; col < cols; col++) {\n        currentRow.push({\n          row,\n          col,\n          isStart: row === START_NODE[0] && col === START_NODE[1],\n          isEnd: row === END_NODE[0] && col === END_NODE[1],\n          isVisited: false,\n          isPath: false\n        });\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  };\n  const [grid, setGrid] = useState(createGrid());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pathfinding Algorithm Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Start Algorithm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row.map((node, nodeIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `node \n                  ${node.isStart ? \"start\" : \"\"} \n                  ${node.isEnd ? \"end\" : \"\"} \n                  ${node.isVisited ? \"visited\" : \"\"} \n                  ${node.isPath ? \"path\" : \"\"}`\n        }, nodeIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, rowIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k45KhAHyeMFCAVfeZZDkYL+FetI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","rows","cols","START_NODE","END_NODE","createGrid","grid","row","currentRow","col","push","isStart","isEnd","isVisited","isPath","setGrid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rowIdx","node","nodeIdx","_c","$RefreshReg$"],"sources":["/Users/joshfeather/Documents/pathfinding-visualizer/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const rows = 20;\n  const cols = 20;\n  const START_NODE = [9, 0];\n  const END_NODE = [10, cols - 1];\n\n  const createGrid = () => {\n    const grid = [];\n    for (let row = 0; row < rows; row++) {\n      const currentRow = [];\n      for (let col = 0; col < cols; col++) {\n        currentRow.push({\n          row,\n          col,\n          isStart: row === START_NODE[0] && col === START_NODE[1],\n          isEnd: row === END_NODE[0] && col === END_NODE[1],\n          isVisited: false,\n          isPath: false,\n        });\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  };\n\n  const [grid, setGrid] = useState(createGrid());\n\n  return (\n    <div className=\"App\">\n      <h1>Pathfinding Algorithm Visualizer</h1>\n      <button>Start Algorithm</button>\n      <div className=\"grid\">\n        {grid.map((row, rowIdx) => (\n          <div key={rowIdx} className=\"grid-row\">\n            {row.map((node, nodeIdx) => (\n              <div\n                key={nodeIdx}\n                className={`node \n                  ${node.isStart ? \"start\" : \"\"} \n                  ${node.isEnd ? \"end\" : \"\"} \n                  ${node.isVisited ? \"visited\" : \"\"} \n                  ${node.isPath ? \"path\" : \"\"}`}\n              ></div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACzB,MAAMC,QAAQ,GAAG,CAAC,EAAE,EAAEF,IAAI,GAAG,CAAC,CAAC;EAE/B,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGN,IAAI,EAAEM,GAAG,EAAE,EAAE;MACnC,MAAMC,UAAU,GAAG,EAAE;MACrB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGP,IAAI,EAAEO,GAAG,EAAE,EAAE;QACnCD,UAAU,CAACE,IAAI,CAAC;UACdH,GAAG;UACHE,GAAG;UACHE,OAAO,EAAEJ,GAAG,KAAKJ,UAAU,CAAC,CAAC,CAAC,IAAIM,GAAG,KAAKN,UAAU,CAAC,CAAC,CAAC;UACvDS,KAAK,EAAEL,GAAG,KAAKH,QAAQ,CAAC,CAAC,CAAC,IAAIK,GAAG,KAAKL,QAAQ,CAAC,CAAC,CAAC;UACjDS,SAAS,EAAE,KAAK;UAChBC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ;MACAR,IAAI,CAACI,IAAI,CAACF,UAAU,CAAC;IACvB;IACA,OAAOF,IAAI;EACb,CAAC;EAED,MAAM,CAACA,IAAI,EAAES,OAAO,CAAC,GAAGnB,QAAQ,CAACS,UAAU,CAAC,CAAC,CAAC;EAE9C,oBACEP,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCvB,OAAA;MAAAmB,QAAA,EAAQ;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChCvB,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBX,IAAI,CAACgB,GAAG,CAAC,CAACf,GAAG,EAAEgB,MAAM,kBACpBzB,OAAA;QAAkBkB,SAAS,EAAC,UAAU;QAAAC,QAAA,EACnCV,GAAG,CAACe,GAAG,CAAC,CAACE,IAAI,EAAEC,OAAO,kBACrB3B,OAAA;UAEEkB,SAAS,EAAE;AAC3B,oBAAoBQ,IAAI,CAACb,OAAO,GAAG,OAAO,GAAG,EAAE;AAC/C,oBAAoBa,IAAI,CAACZ,KAAK,GAAG,KAAK,GAAG,EAAE;AAC3C,oBAAoBY,IAAI,CAACX,SAAS,GAAG,SAAS,GAAG,EAAE;AACnD,oBAAoBW,IAAI,CAACV,MAAM,GAAG,MAAM,GAAG,EAAE;QAAG,GAL3BW,OAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMR,CACP;MAAC,GAVME,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CAjDQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}