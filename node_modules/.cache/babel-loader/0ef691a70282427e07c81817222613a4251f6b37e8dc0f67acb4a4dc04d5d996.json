{"ast":null,"code":"var _jsxFileName = \"/Users/joshfeather/Documents/pathfinding-visualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rows = 20;\nconst cols = 20;\nconst START_NODE = [0, 0];\nconst END_NODE = [rows - 1, cols - 1];\nconst createGrid = () => {\n  const grid = [];\n  for (let row = 0; row < rows; row++) {\n    const currentRow = [];\n    for (let col = 0; col < cols; col++) {\n      currentRow.push({\n        row,\n        col,\n        isStart: row === START_NODE[0] && col === START_NODE[1],\n        isEnd: row === END_NODE[0] && col === END_NODE[1],\n        isVisited: false,\n        isPath: false\n      });\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n};\nfunction App() {\n  _s();\n  const [grid, setGrid] = useState(createGrid());\n  const startAlgorithm = () => {\n    aStarAnimated(grid, setGrid, START_NODE, END_NODE);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pathfinding Algorithm Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startAlgorithm,\n      children: \"Start Algorithm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row.map((node, nodeIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `node \n                  ${node.isStart ? \"start\" : \"\"} \n                  ${node.isEnd ? \"end\" : \"\"} \n                  ${node.isVisited ? \"visited\" : \"\"} \n                  ${node.isPath ? \"path\" : \"\"}`\n        }, nodeIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this))\n      }, rowIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k45KhAHyeMFCAVfeZZDkYL+FetI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","rows","cols","START_NODE","END_NODE","createGrid","grid","row","currentRow","col","push","isStart","isEnd","isVisited","isPath","App","_s","setGrid","startAlgorithm","aStarAnimated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","rowIdx","node","nodeIdx","_c","$RefreshReg$"],"sources":["/Users/joshfeather/Documents/pathfinding-visualizer/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst rows = 20;\nconst cols = 20;\nconst START_NODE = [0, 0];\nconst END_NODE = [rows - 1, cols - 1];\n\nconst createGrid = () => {\n  const grid = [];\n  for (let row = 0; row < rows; row++) {\n    const currentRow = [];\n    for (let col = 0; col < cols; col++) {\n      currentRow.push({\n        row,\n        col,\n        isStart: row === START_NODE[0] && col === START_NODE[1],\n        isEnd: row === END_NODE[0] && col === END_NODE[1],\n        isVisited: false,\n        isPath: false,\n      });\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n};\n\nfunction App() {\n  const [grid, setGrid] = useState(createGrid());\n\n  const startAlgorithm = () => {\n    aStarAnimated(grid, setGrid, START_NODE, END_NODE);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Pathfinding Algorithm Visualizer</h1>\n      <button onClick={startAlgorithm}>Start Algorithm</button>\n      <div className=\"grid\">\n        {grid.map((row, rowIdx) => (\n          <div key={rowIdx} className=\"grid-row\">\n            {row.map((node, nodeIdx) => (\n              <div\n                key={nodeIdx}\n                className={`node \n                  ${node.isStart ? \"start\" : \"\"} \n                  ${node.isEnd ? \"end\" : \"\"} \n                  ${node.isVisited ? \"visited\" : \"\"} \n                  ${node.isPath ? \"path\" : \"\"}`}\n              ></div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}