{"ast":null,"code":"var _jsxFileName = \"/Users/joshfeather/Documents/pathfinding-visualizer/src/Dijkstras.js\",\n  _s = $RefreshSig$();\nconst getNeighbors = (node, rows, cols) => {\n  const [row, col] = node;\n  const neighbors = [];\n  if (row > 0) neighbors.push([row - 1, col]);\n  if (row < rows - 1) neighbors.push([row + 1, col]);\n  if (col > 0) neighbors.push([row, col - 1]);\n  if (col < cols - 1) neighbors.push([row, col + 1]);\n  return neighbors;\n};\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Dijkstras from \"./Dijkstras\";\nimport AStar from \"./AStar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const rows = 20;\n  const cols = 20;\n  const [startNode, setStartNode] = useState([9, 9]);\n  const [endNode, setEndNode] = useState([0, 0]);\n  const [draggingNodeType, setDraggingNodeType] = useState(null);\n  const [running, setRunning] = useState(false);\n  const [grid, setGrid] = useState(createGrid());\n  const [algorithmToRun, setAlgorithmToRun] = useState(null);\n  function createGrid() {\n    const grid = [];\n    for (let row = 0; row < rows; row++) {\n      const currentRow = [];\n      for (let col = 0; col < cols; col++) {\n        currentRow.push({\n          row,\n          col,\n          isStart: row === startNode[0] && col === startNode[1],\n          isEnd: row === endNode[0] && col === endNode[1],\n          isVisited: false,\n          isPath: false\n        });\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  }\n  const resetBoard = () => {\n    setGrid(createGrid());\n  };\n  const startDijkstras = () => {\n    if (!running) {\n      resetBoard();\n      setAlgorithmToRun(\"dijkstra\");\n    }\n  };\n  const startAStar = () => {\n    if (!running) {\n      resetBoard();\n      setAlgorithmToRun(\"astar\");\n    }\n  };\n  useEffect(() => {\n    if (algorithmToRun && !running) {\n      const newGrid = createGrid();\n      setGrid(newGrid);\n      setRunning(true);\n      if (algorithmToRun === \"dijkstra\") {\n        Dijkstras(newGrid, startNode, endNode, setGrid, () => setRunning(false));\n      } else if (algorithmToRun === \"astar\") {\n        AStar(newGrid, startNode, endNode, setGrid, () => setRunning(false));\n      }\n      setAlgorithmToRun(null);\n    }\n  }, [startNode, endNode, algorithmToRun]);\n  const handleMouseDown = nodeType => {\n    setDraggingNodeType(nodeType);\n  };\n  const handleMouseUp = () => {\n    setDraggingNodeType(null);\n  };\n  const handleMouseEnter = (row, col) => {\n    if (draggingNodeType === \"start\") {\n      setStartNode([row, col]);\n    } else if (draggingNodeType === \"end\") {\n      setEndNode([row, col]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pathfinding Algorithm Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startDijkstras,\n        children: \"Start Dijkstra's Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startAStar,\n        children: \"Start A Star Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetBoard,\n        children: \"Reset Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      onMouseUp: handleMouseUp,\n      children: grid.map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row.map((node, nodeIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `node \n                  ${node.isStart ? \"start\" : \"\"} \n                  ${node.isEnd ? \"end\" : \"\"} \n                  ${!node.isStart && !node.isEnd && node.isVisited ? \"visited\" : \"\"} \n                  ${node.isPath ? \"path\" : \"\"}`,\n          onMouseDown: () => node.isStart ? handleMouseDown(\"start\") : node.isEnd ? handleMouseDown(\"end\") : null,\n          onMouseEnter: () => handleMouseEnter(node.row, node.col)\n        }, nodeIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, rowIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tDsNoJv9RxFanAjRktxpP2MRrT0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["getNeighbors","node","rows","cols","row","col","neighbors","push","React","useState","useEffect","Dijkstras","AStar","jsxDEV","_jsxDEV","App","_s","startNode","setStartNode","endNode","setEndNode","draggingNodeType","setDraggingNodeType","running","setRunning","grid","setGrid","createGrid","algorithmToRun","setAlgorithmToRun","currentRow","isStart","isEnd","isVisited","isPath","resetBoard","startDijkstras","startAStar","newGrid","handleMouseDown","nodeType","handleMouseUp","handleMouseEnter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onMouseUp","map","rowIdx","nodeIdx","onMouseDown","onMouseEnter","_c","$RefreshReg$"],"sources":["/Users/joshfeather/Documents/pathfinding-visualizer/src/Dijkstras.js"],"sourcesContent":["const getNeighbors = (node, rows, cols) => {\n  const [row, col] = node;\n  const neighbors = [];\n  if (row > 0) neighbors.push([row - 1, col]);\n  if (row < rows - 1) neighbors.push([row + 1, col]);\n  if (col > 0) neighbors.push([row, col - 1]);\n  if (col < cols - 1) neighbors.push([row, col + 1]);\n  return neighbors;\n};\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Dijkstras from \"./Dijkstras\";\nimport AStar from \"./AStar\";\n\nfunction App() {\n  const rows = 20;\n  const cols = 20;\n  const [startNode, setStartNode] = useState([9, 9]);\n  const [endNode, setEndNode] = useState([0, 0]);\n  const [draggingNodeType, setDraggingNodeType] = useState(null);\n  const [running, setRunning] = useState(false);\n  const [grid, setGrid] = useState(createGrid());\n  const [algorithmToRun, setAlgorithmToRun] = useState(null);\n\n  function createGrid() {\n    const grid = [];\n    for (let row = 0; row < rows; row++) {\n      const currentRow = [];\n      for (let col = 0; col < cols; col++) {\n        currentRow.push({\n          row,\n          col,\n          isStart: row === startNode[0] && col === startNode[1],\n          isEnd: row === endNode[0] && col === endNode[1],\n          isVisited: false,\n          isPath: false,\n        });\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  }\n\n  const resetBoard = () => {\n    setGrid(createGrid());\n  };\n\n  const startDijkstras = () => {\n    if (!running) {\n      resetBoard();\n      setAlgorithmToRun(\"dijkstra\");\n    }\n  };\n\n  const startAStar = () => {\n    if (!running) {\n      resetBoard();\n      setAlgorithmToRun(\"astar\");\n    }\n  };\n\n  useEffect(() => {\n    if (algorithmToRun && !running) {\n      const newGrid = createGrid();\n      setGrid(newGrid);\n\n      setRunning(true);\n      if (algorithmToRun === \"dijkstra\") {\n        Dijkstras(newGrid, startNode, endNode, setGrid, () =>\n          setRunning(false)\n        );\n      } else if (algorithmToRun === \"astar\") {\n        AStar(newGrid, startNode, endNode, setGrid, () => setRunning(false));\n      }\n      setAlgorithmToRun(null);\n    }\n  }, [startNode, endNode, algorithmToRun]);\n\n  const handleMouseDown = (nodeType) => {\n    setDraggingNodeType(nodeType);\n  };\n\n  const handleMouseUp = () => {\n    setDraggingNodeType(null);\n  };\n\n  const handleMouseEnter = (row, col) => {\n    if (draggingNodeType === \"start\") {\n      setStartNode([row, col]);\n    } else if (draggingNodeType === \"end\") {\n      setEndNode([row, col]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Pathfinding Algorithm Visualizer</h1>\n      <div className=\"buttons\">\n        <button onClick={startDijkstras}>Start Dijkstra's Algorithm</button>\n        <button onClick={startAStar}>Start A Star Algorithm</button>\n        <button onClick={resetBoard}>Reset Board</button>\n      </div>\n      <div className=\"grid\" onMouseUp={handleMouseUp}>\n        {grid.map((row, rowIdx) => (\n          <div key={rowIdx} className=\"grid-row\">\n            {row.map((node, nodeIdx) => (\n              <div\n                key={nodeIdx}\n                className={`node \n                  ${node.isStart ? \"start\" : \"\"} \n                  ${node.isEnd ? \"end\" : \"\"} \n                  ${\n                    !node.isStart && !node.isEnd && node.isVisited\n                      ? \"visited\"\n                      : \"\"\n                  } \n                  ${node.isPath ? \"path\" : \"\"}`}\n                onMouseDown={() =>\n                  node.isStart\n                    ? handleMouseDown(\"start\")\n                    : node.isEnd\n                    ? handleMouseDown(\"end\")\n                    : null\n                }\n                onMouseEnter={() => handleMouseEnter(node.row, node.col)}\n              ></div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}